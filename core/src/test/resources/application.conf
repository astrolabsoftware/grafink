reader {
  basePath = "/test/base/path"
  format = "parquet"
  keepCols = ["objectId", "schemavsn"]
  keepColsRenamed =
    [ { "f": "mulens.class_1", "t": "mulens_class_1" },
      { "f": "mulens.class_2", "t": "mulens_class_2" }
    ]
}

idManager {
  spark {
    dataPath = "/test/intermediate/base/path"
    clearOnDelete = false
  }
  hbase {
    tableName = "IDManagement"
    cf = "cf1"
    qualifier = "id"
  }
}

janusgraph {
  schema {
    vertexPropertyCols = ["rfscore", "snnscore"]
    vertexLabel = "type"
    edgeLabels = [
      {
        name = "similarity"
        properties = {
          key = "value"
          typ = "int"
        }
      }
    ]
    index {
      composite = [
        {
          name = "objectIdIndex"
          properties = ["objectId"]
        }
      ]
      mixed = [
      ]
      edge = [
        {
          name = "similarityIndex"
          properties = ["value"]
          label = "similarity"
        }
      ]
    }
  }
  vertexLoader {
    batchSize = 10
  }
  edgeLoader = {
    batchSize = 100
    parallelism = 10
    taskSize = 25000
    rules {
      similarityClassifer {
        similarityExp = "rfscore OR objectId"
      }
    }
  }
  storage {
    host: "127.0.0.1"
    port: 8182
    tableName = "TestJanusGraph"
    extraConf = ["zookeeper.recovery.retry=3"]
  }
  indexBackend {
    name = "elastic"
    indexName = "elastictest"
    host: "127.0.0.1:9200"
  }
}

hbase {
  zookeeper {
    quoram = "localhost"
  }
}