@startuml
title Grafink Architecture
frame "Spark Cluster" as scluster {
  rectangle driver {
    component [IDManagerSparkService]
  }
  rectangle executor1 as exec1 {
     [janusgraph instance1] as in1
  }
  rectangle executor2 as exec2 {
    [janusgraph instance2] as in2
  }
  rectangle executor3 as exec3 {
     [janusgraph instance3] as in3
  }
}

cloud "JanusGraph Server" as jg {
}

rectangle "Hbase" as hbase {
  rectangle JanusGraphTable {
  }
}

rectangle storage_layer {
  [parquet_data]
  rectangle IDManager_data [
    **IDManager Data**
    Stores the generated vertex ids
    along with Vertex Data already
    loaded into JanusGraph
  ]
}

parquet_data -[hidden]--> hbase
parquet_data -[hidden]--> storage_layer
jg -[hidden]--> hbase
storage_layer -[hidden]--> hbase
driver -[hidden]--> hbase
storage_layer .> exec1: read
storage_layer .> exec2: read
storage_layer .> exec3: read

in1 -> JanusGraphTable: write
in2 -> JanusGraphTable: write
in3 -> JanusGraphTable: write

jg -> hbase: read

IDManagerSparkService <-> IDManager_data: read/write

@enduml